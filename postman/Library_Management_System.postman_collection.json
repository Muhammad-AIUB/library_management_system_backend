{
  "info": {
    "_postman_id": "3d07e0e5-a8a7-40bc-9b9d-a8b5e4d9b962",
    "name": "Library Management System",
    "description": "API collection for testing the Library Management System backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"authToken\", jsonData.token);",
                  "pm.environment.set(\"userId\", jsonData.user._id);",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Response has token\", function () {",
                  "    pm.expect(jsonData.token).to.exist;",
                  "});",
                  "pm.test(\"User created successfully\", function () {",
                  "    pm.expect(jsonData.user).to.exist;",
                  "    pm.expect(jsonData.user.email).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test{{$timestamp}}@example.com\",\n    \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user with the system"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.environment.set(\"authToken\", jsonData.token);",
                  "pm.environment.set(\"userId\", jsonData.user._id);",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has token\", function () {",
                  "    pm.expect(jsonData.token).to.exist;",
                  "});",
                  "pm.test(\"User login successful\", function () {",
                  "    pm.expect(jsonData.user).to.exist;",
                  "    pm.expect(jsonData.user.email).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Profile data exists\", function () {",
                  "    var jsonData = JSON.parse(responseBody);",
                  "    pm.expect(jsonData._id).to.exist;",
                  "    pm.expect(jsonData.name).to.exist;",
                  "    pm.expect(jsonData.email).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get the current user's profile (protected route)"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration and login"
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Register User (Legacy)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User (Legacy)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123!\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Books",
      "item": [
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Test Book\",\n    \"author\": \"Test Author\",\n    \"genre\": \"Fiction\",\n    \"pages\": 300,\n    \"description\": \"This is a test book\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/books",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/books",
              "host": ["{{baseUrl}}"],
              "path": ["api", "books"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reading Goals",
      "item": [
        {
          "name": "Create Reading Goal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user\": \"{{userId}}\",\n    \"type\": \"books\",\n    \"targetBooks\": 10,\n    \"duration\": \"monthly\",\n    \"startDate\": \"2023-01-01\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/reading-goals",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reading-goals"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Goals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/reading-goals/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "reading-goals", "user", "{{userId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Create Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"user\": \"{{userId}}\",\n    \"title\": \"Test Notification\",\n    \"message\": \"This is a test notification\",\n    \"type\": \"system\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/notifications",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notifications/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notifications", "user", "{{userId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Recommendations",
      "item": [
        {
          "name": "Generate Recommendations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/recommendation/generate/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "recommendation", "generate", "{{userId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Recommendations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/recommendation/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "recommendation", "{{userId}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ]
} 